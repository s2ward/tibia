name: Optimize and Process Images

on:
  pull_request:
    paths:
      - 'images/**/*.gif'
      - 'images/**/*.webp'
      - 'images/**/*.png'
      - 'images/**/*.jpg'
      - 'images/**/*.jpeg'

env:
  IMAGE_DIR: 'images'

jobs:
  process-images:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v35
      with:
        files: ${{ env.IMAGE_DIR }}/**/*.{gif,webp,png,jpg,jpeg}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y imagemagick pngquant optipng
        convert -version

    - name: Process changed images
      run: |
        process_image() {
          local input_file="$1"
          local dir=$(dirname "$input_file")
          local filename=$(basename -- "$input_file")
          local name="${filename%.*}"
          local output_file="$dir/$name.png"
          local temp_file=$(mktemp --suffix=.png)

          echo "Processing: $input_file"

          # Step 1: Convert to PNG
          if ! convert "$input_file" PNG32:"$temp_file"; then
            echo "Error: Failed to convert $input_file to PNG"
            rm -f "$temp_file"
            return 1
          fi

          # Step 2: Pad to square
          local size=$(identify -format "%[fx:max(w,h)]" "$temp_file")
          if ! convert "$temp_file" -background none -gravity center -extent ${size}x${size} PNG32:"$temp_file"; then
            echo "Error: Failed to pad $temp_file to square"
            rm -f "$temp_file"
            return 1
          fi

          # Step 3: Optimize PNG
          if ! optipng -o2 -quiet "$temp_file"; then
            echo "Error: Failed to optimize $temp_file"
            rm -f "$temp_file"
            return 1
          fi

          # Move optimized file to final destination
          mv "$temp_file" "$output_file"

          # Step 4: Remove original file if it's different from the output
          if [ "$input_file" != "$output_file" ]; then
            rm -f "$input_file"
          fi

          echo "Successfully processed: $input_file -> $output_file"
        }

        export -f process_image

        echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | while read file; do
          if ! process_image "$file"; then
            echo "Failed to process $file"
          fi
        done

    - name: Commit and push changes
      if: success()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A  # This will add all changes, including deletions
        git diff --staged --quiet || (git commit -m "Optimize and process images" && 
          git push origin HEAD:${{ github.head_ref }})
