name: Fork PR Processor

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to process (e.g., 670)'
        required: true
      fork_branch:
        description: 'Branch name in the fork repository (e.g., talesoftibia-gh:patch-29)'
        required: true

jobs:
  process_fork_pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Extract fork owner and branch
        id: extract_info
        run: |
          FORK_OWNER=$(echo "${{ github.event.inputs.fork_branch }}" | cut -d':' -f1)
          BRANCH_NAME=$(echo "${{ github.event.inputs.fork_branch }}" | cut -d':' -f2)
          echo "fork_owner=$FORK_OWNER" >> $GITHUB_OUTPUT
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Fetch and merge fork branch
        env:
          FORK_OWNER: ${{ steps.extract_info.outputs.fork_owner }}
          BRANCH_NAME: ${{ steps.extract_info.outputs.branch_name }}
          PR_NUMBER: ${{ github.event.inputs.pr_number }}
        run: |
          git remote add fork https://github.com/$FORK_OWNER/tibia.git
          git fetch fork $BRANCH_NAME
          git checkout -b process-fork-pr-$PR_NUMBER
          git merge --no-ff fork/$BRANCH_NAME -m "Merge changes from fork PR #$PR_NUMBER by @$FORK_OWNER"
          if [ $? -ne 0 ]; then
            echo "Merge conflict occurred. Manual intervention required."
            git merge --abort
            exit 1
          fi

      - name: Push changes
        run: |
          git push origin process-fork-pr-${{ github.event.inputs.pr_number }}

      - name: Create or update PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.inputs.pr_number }}
          FORK_OWNER: ${{ steps.extract_info.outputs.fork_owner }}
        run: |
          PR_BRANCH="process-fork-pr-$PR_NUMBER"
          
          PR_INFO=$(gh pr view $PR_NUMBER --json title,body,author)
          PR_TITLE=$(echo $PR_INFO | jq -r .title)
          PR_BODY=$(echo $PR_INFO | jq -r .body)
          PR_AUTHOR=$(echo $PR_INFO | jq -r .author.login)
          
          EXISTING_PR=$(gh pr list --head $PR_BRANCH --json number --jq '.[0].number')
          
          PR_BODY_WITH_CREDIT="This PR processes changes from fork PR #$PR_NUMBER by @$PR_AUTHOR.

          Original PR description:
          $PR_BODY

          Contributors: @$PR_AUTHOR, @$FORK_OWNER

          Apply changes with /apply command."
          
          if [ -z "$EXISTING_PR" ]; then
            if ! gh pr create --base main --head $PR_BRANCH \
              --title "$PR_TITLE" \
              --body "$PR_BODY_WITH_CREDIT"; then
              echo "Failed to create PR. There might be no changes to commit."
              exit 1
            fi
          else
            gh pr edit $EXISTING_PR --title "$PR_TITLE" \
              --body "$PR_BODY_WITH_CREDIT"
          fi

      - name: Comment on original PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.inputs.pr_number }}
          FORK_OWNER: ${{ steps.extract_info.outputs.fork_owner }}
        run: |
          PROCESS_PR=$(gh pr list --head process-fork-pr-$PR_NUMBER --json number --jq '.[0].number')
          gh pr comment $PR_NUMBER --body "Changes from this fork PR by @$FORK_OWNER are being processed in PR #$PROCESS_PR. Please use the /apply command on the new PR to finalize updates."

      - name: Comment on new PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.inputs.pr_number }}
          FORK_OWNER: ${{ steps.extract_info.outputs.fork_owner }}
        run: |
          NEW_PR=$(gh pr list --head process-fork-pr-$PR_NUMBER --json number --jq '.[0].number')
          PR_INFO=$(gh pr view $PR_NUMBER --json author)
          PR_AUTHOR=$(echo $PR_INFO | jq -r .author.login)
          gh pr comment $NEW_PR --body "This PR processes changes from fork PR #$PR_NUMBER. Original contributors: @$PR_AUTHOR, @$FORK_OWNER. Thank you for your contributions!"
