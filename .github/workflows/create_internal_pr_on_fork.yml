name: Fork PR Preparation
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  prepare_fork_pr:
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.repo.full_name != github.repository
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Fetch base branch
        run: |
          git fetch origin ${{ github.base_ref }}:${{ github.base_ref }}

      - name: Check for changes
        id: check_changes
        run: |
          git diff --name-only ${{ github.base_ref }}..HEAD | grep . && echo "changes=true" >> $GITHUB_OUTPUT || echo "No changes detected"

      - name: Get original committer info
        id: get_committer_info
        run: |
          COMMITTER_NAME=$(git log -1 --pretty=format:'%an' ${{ github.event.pull_request.head.sha }})
          COMMITTER_EMAIL=$(git log -1 --pretty=format:'%ae' ${{ github.event.pull_request.head.sha }})
          echo "committer_name=${COMMITTER_NAME}" >> $GITHUB_OUTPUT
          echo "committer_email=${COMMITTER_EMAIL}" >> $GITHUB_OUTPUT

      - name: Debug info
        run: |
          echo "Base ref: ${{ github.base_ref }}"
          echo "Head ref: ${{ github.head_ref }}"
          echo "PR head sha: ${{ github.event.pull_request.head.sha }}"
          echo "Changes detected: ${{ steps.check_changes.outputs.changes }}"
          git status
          git log --oneline -n 5

      - name: Create branch for changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git checkout -b fork-${{ github.event.pull_request.number }}
          git add .
          git config user.name "${{ steps.get_committer_info.outputs.committer_name }}"
          git config user.email "${{ steps.get_committer_info.outputs.committer_email }}"
          git commit -m "Sync changes from fork PR #${{ github.event.pull_request.number }}"

      - name: Create PR to main
        id: create_pr
        if: steps.check_changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'Sync changes from fork PR #${{ github.event.pull_request.number }}'
          branch: fork-${{ github.event.pull_request.number }}
          base: ${{ github.base_ref }}
          title: 'Sync changes from fork PR #${{ github.event.pull_request.number }}'
          body: 'This PR contains changes from the fork PR #${{ github.event.pull_request.number }}. Apply changes with /apply command.'

      - name: Comment on original PR
        if: steps.create_pr.outputs.pull-request-number
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: 'A new PR #${{ steps.create_pr.outputs.pull-request-number }} has been created to handle updates from this fork. Please use the /apply command on the new PR to process updates.'
            })
