name: Deploy Resources
on:
  push:
    branches: [main]
    paths: ['images/**', 'data/**', 'docs/**']
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for all branches and tags

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/apt
          ~/.cache/rclone
        key: ${{ runner.os }}-deps-${{ hashFiles('**/workflow.yml') }}
        restore-keys: |
          ${{ runner.os }}-deps-

    - name: Install dependencies
      run: |
        if ! command -v jq &> /dev/null; then
          sudo apt-get update && sudo apt-get install -y jq
        else
          echo "jq is already installed"
        fi
        if ! command -v rclone &> /dev/null; then
          curl https://rclone.org/install.sh | sudo bash
        else
          echo "rclone is already installed"
        fi

    - name: Process and copy files
      run: |
        # Minimize JSON files
        for file in data/{npcs,books,status}/*.json; do
          jq -c . "$file" > "${file%.json}.min.json"
        done
        
        # Prepare directories
        mkdir -p gh-pages/{images/{books,creatures,spells,npcs},data/{npcs,books,status}}
        
        # Copy image files
        cp -r images/npcs/* gh-pages/images/npcs/
        cp -r images/books/* gh-pages/images/books/
        cp -r images/creatures/* gh-pages/images/creatures/
        cp -r images/spells/* gh-pages/images/spells/
        
        # Copy and rename minimized JSON files
        for file in data/{npcs,books,status}/*.min.json; do
          cp "$file" "gh-pages/${file%.min.json}.json"
        done
        
        # List all copied files for verification
        echo "Files in gh-pages:"
        find gh-pages -type f

    - name: Sync to Cloudflare R2
      env:
        RCLONE_CONFIG_CLOUDFLARE_TYPE: s3
        RCLONE_CONFIG_CLOUDFLARE_PROVIDER: Cloudflare
        RCLONE_CONFIG_CLOUDFLARE_ENV_AUTH: true
        RCLONE_CONFIG_CLOUDFLARE_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_R2_ACCESS_KEY_ID }}
        RCLONE_CONFIG_CLOUDFLARE_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_R2_SECRET_ACCESS_KEY }}
        RCLONE_CONFIG_CLOUDFLARE_ENDPOINT: https://${{ secrets.CLOUDFLARE_ACCOUNT_ID }}.r2.cloudflarestorage.com
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "Performing full sync to Cloudflare R2"
          rclone sync gh-pages/ cloudflare:resources
        else
          echo "Syncing changed files to Cloudflare R2"
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E '^(images|data)/')
          echo "Files to be synced to Cloudflare R2:"
          echo "$CHANGED_FILES"
          echo "$CHANGED_FILES" > changed_files.txt
          rclone sync --files-from changed_files.txt gh-pages/ cloudflare:resources
          rm changed_files.txt
        fi

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: './gh-pages'
        publish_branch: gh-pages
        commit_message: ${{ github.event_name == 'workflow_dispatch' && 'Full sync deployed to GitHub Pages' || 'Updated resources deployed to GitHub Pages' }}
