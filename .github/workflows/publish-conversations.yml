name: NPC Workflow

on:
  issue_comment:
    types: [created]
  workflow_dispatch:

permissions: write-all

jobs:
  prepare:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/apply')
    runs-on: ubuntu-latest
    outputs:
      pr_head_sha: ${{ steps.set_pr_details.outputs.pr_head_sha }}
      pr_base_ref: ${{ steps.set_pr_details.outputs.pr_base_ref }}
      pr_branch_name: ${{ steps.set_pr_details.outputs.pr_branch_name}}
    steps:
      - name: Fetch PR details
        id: get_pr_details
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set PR Details
        id: set_pr_details
        run: |
          PR_HEAD_SHA=$(echo '${{ steps.get_pr_details.outputs.data }}' | jq -r .head.sha)
          PR_BASE_REF=$(echo '${{ steps.get_pr_details.outputs.data }}' | jq -r .base.ref)
          PR_BRANCH_NAME=$(echo '${{ steps.get_pr_details.outputs.data }}' | jq -r .head.ref)
          echo "PR HEAD SHA: $PR_HEAD_SHA"
          echo "PR BASE REF: $PR_BASE_REF"
          echo "branch name: $PR_BRANCH_NAME"
          echo "::set-output name=pr_head_sha::$PR_HEAD_SHA"
          echo "::set-output name=pr_branch_name::$PR_BRANCH_NAME"
          echo "::set-output name=pr_base_ref::$PR_BASE_REF"

  update_file_mapping:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.prepare.outputs.pr_branch_name }}
          fetch-depth: 0

      - name: Setup Git User
        run: |
          git config user.name "GitHub Action"
          git config user.email "actions@github.com"

      - name: Merge main into feature branch
        run: |
          git fetch
          git fetch origin main
          git merge origin/main 

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      #- name: Fetch base branch
      #  run: |
      #    git fetch origin ${{ needs.prepare.outputs.pr_base_ref }}

      - name: Checkout base branch files
        run: |
          git worktree add base FETCH_HEAD
        env:
          base_dir: base

      - name: Update file mapping
        run: |
          mapfile -t ADDED_FILES < <(git diff --name-status --diff-filter=A FETCH_HEAD | awk '{print $2}' | grep '^npc/')
          mapfile -t MODIFIED_FILES < <(git diff --name-status --diff-filter=M FETCH_HEAD | awk '{print $2}' | grep '^npc/')
          mapfile -t RENAMED_FILES < <(git diff --name-status --diff-filter=R FETCH_HEAD | awk '{print $2" "$3}' | grep '^npc/')
          mapfile -t DELETED_FILES < <(git diff --name-status --diff-filter=D FETCH_HEAD | awk '{print $2}' | grep '^npc/')
          ADDED_FILES=${ADDED_FILES[@]}
          MODIFIED_FILES=${MODIFIED_FILES[@]}
          RENAMED_FILES=${RENAMED_FILES[@]}
          DELETED_FILES=${DELETED_FILES[@]}
          python src/update_file_mapping.py "$repo_dir" "$base_dir" "$ADDED_FILES" "$MODIFIED_FILES" "$RENAMED_FILES" "$DELETED_FILES"
        env:
          repo_dir: ${{ github.workspace }}
          base_dir: ${{ github.workspace }}/base

      - name: Commit file_mapping.json
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update file_mapping.json"
          file_pattern: api/file_mapping.json
          branch: ${{ needs.prepare.outputs.pr_branch_name }}

  convert:
    needs: 
      - update_file_mapping
      - prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.prepare.outputs.pr_branch_name }}
          fetch-depth: 0

      - name: Setup Git User
        run: |
          git config user.name "GitHub Action"
          git config user.email "actions@github.com"

      - name: Merge main into feature branch
        run: |
          git fetch
          git fetch origin main
          git merge origin/main 

  
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
  
      - name: Convert txt files to JSON
        run: |
          python src/txt_to_json.py

      - name: Commit conversations.json
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update conversations.json"
          file_pattern: api/conversations.json
          branch: ${{ needs.prepare.outputs.pr_branch_name }}
          
  generate_trees:
    needs: 
      - convert
      - prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.prepare.outputs.pr_branch_name }}
          fetch-depth: 0

      - name: Setup Git User
        run: |
          git config user.name "GitHub Action"
          git config user.email "actions@github.com"

      - name: Merge main into feature branch
        run: |
          git fetch
          git fetch origin main
          git merge origin/main 

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Generate trees
        run: |
          python src/tree.py
  
      - name: Commit tree files
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update tree files"
          file_pattern: 'doc/*_transcripts.md'
          branch: ${{ needs.prepare.outputs.pr_branch_name }}
